@{
    // Here: View | Reports
    this.ViewBag.Title = "Reports";
    this.Layout = "~/Views/Shared/Layout.cshtml";
}

@*
<script type="text/javascript" src="http://ci.spreadbot.net/externalStatus.html?js=1"></script>
*@

<div>
    <h2>May 1 2015</h2>
    <ul>
        <li>
            + Done This Week
            <ul>
                <li>
                    High-level classes were added with the <a href="https://github.com/krokodev/spreadbot/tree/master/sources/Spreadbot.Core.Channels.Amazon/Services/Mws">MwsConnector</a> at the head which encapsulates Amazon MWS functional such as <a href="http://docs.developer.amazonservices.com/en_US/feeds/Feeds_FeedProcessingStatus.html">send feed, get feed info, etc</a>)
                </li>
                <li>
                    Ebay adapter was refactored to be <a href="http://screencast.com/t/yR7gm9dGNVAZ">more similar</a> to the Amazon adapter, all existed tests are succesfully passed
                </li>
                <li>
                    <a href="https://github.com/krokodev/spreadbot/blob/master/sources/Spreadbot.Tests.Nunit.Amazon/Tests/Mws_Connector_Tests.cs">New tests</a> are generated to verify and protect the Amazon Adapter's functional
                </li>
            </ul>
        </li>
        <li>
            - Problems
            <ul>
                <li>
                    Money comes to the end
                </li>
            </ul>
        </li>
        <li>
            > Plans for the Next Week
            <ul>
                <li>
                    Complete the Amazon Adapter / MWS Connector classes and corresponded tests
                </li>
                <li>
                    Develop Spreadbot beyond-channel API (including such general operations as SendFeed, GetFeedStatus, GetSubmittedProductId etc, based on the Tasks paradigma) -- to use it in the <a href="http://spreadbot.net/Demoshop">Demoshop</a> and later in the <a href="http://www.virtocommerce.com">VirtoCommerce</a> store
                </li>
            </ul>
        </li>
    </ul>
</div>


<div>
    <h2>April 24 2015</h2>
    <ul>
        <li>
            + Done This Week
            <ul>
                <li>
                    <a href="http://www.amazon.com/gp/product/B00WGHPI3O/">Test Item</a> was submitted to Amazon (first manually,
                    then from <a href="https://mws.amazonservices.com/scratchpad/index.html">MWS Scratchpad</a>, finally by unit tests)
                </li>
                <li><a href="http://ci.spreadbot.net/viewLog.html?buildId=272&buildTypeId=Spreadbot_Test_Amazon&tab=testsInfo">Amazon low-level tests</a> created</li>
                <li>Teamcity is configurated to run <a href="http://ci.spreadbot.net/project.html?projectId=Spreadbot">different tests</a> by triggers</li>
                <li>Special <a href="http://content.screencast.com/users/Romakosh/folders/Jing/media/b7b2df01-f24e-4894-ba06-8534d2382f4d/2015-04-24_1735.png">virtual machine</a> was dedicated for the project in mean a developer workspace</li>
            </ul>
        </li>
        <li>
            - Problems
            <ul>
                <li>Slight misunderstanding about generation test items and Amazon sandbox was solved with <a href="https://sellercentral.amazon.com/gp/mws/contactus.html">Amazon techsupport</a> (login required for this link)</li>
            </ul>
        </li>
        <li>
            > Plans for the Next Week
            <ul>
                <li>Generate high-level tests based on Amazon Channel Manager/MWS Connector (see <a href="https://github.com/krokodev/spreadbot/tree/master/sources/Spreadbot.Core.Channels.Ebay">Ebay Channel Manager/MIP Connector)</a></li>
            </ul>
        </li>
    </ul>
</div>

<div>
    <h2>April 17 2015</h2>
    <ul>
        <li>
            + Done This Week
            <ul>
                <li>The main happiness is that the Amazon services have been linked to our Spreadbot</li>
                <li>
                    First <a href="http://ci.spreadbot.net/viewLog.html?order=DURATION_DESC&recordsPerPage=20&filterText=Amazon&status=&currentGroup=test_ungrouped&scope=*%23teamcity%23*%23teamcity%23*&pager.currentPage=1&buildTypeId=bt1&buildId=209&tab=testsInfo">
                        Amazon tests
                    </a> (login as guest please) were made and passed -- the sample product feed was sent
                </li>
                <li>Access to Amazon MWS (<a href="http://docs.developer.amazonservices.com/en_US/dev_guide/index.html">Marketplace Web Services</a>) was obtained</li>
                <li>Nuget package <a href="https://www.nuget.org/packages/Spreadbot.Include/">Spreadbot.Include</a> (contains third-part code, e.g. AmazonMarketplaceServices) was made </li>
                <li><a href="https://www.nuget.org/packages/krokodev.common/">Krokodev.Common</a> tools were migrated from Crocodev.* </li>
                <li>Repositiories were moved to the <a href="https://github.com/krokodev">Krokodev domain at GitHub</a> tools</li>
            </ul>

        </li>
        <li>
            - Problems
            <ul>
                <li>No problems, all goes according the plan</li>
            </ul>
        </li>
        <li>
            > Plans for the Next Week
            <ul>
                <li>Develope additioanal tests to be ready to demonstrate Amazon tools on the <a href="/Demoshop">Demoshop</a></li>
            </ul>
        </li>
    </ul>
</div>

<div>
    <h2>April 10 2015</h2>
    <ul>
        <li>
            + Done This Week
            <ul>
                <li>This week was dedicated to the refactoring for being ready to start implement new channel</li>
                <li>Demo site refactored and code cleaned-up</li>
                <li>Used Moq to reduce load to the MIP services</li>
                <li>Error handling and NLog implemented</li>
                <li>This site updated (+reports, +resources pages)</li>
                <li>Started learning Amazon Marketplace Web Service</li>
            </ul>

        </li>
        <li>
            - Problems
            <ul>
                <li>Minor site-side error when Azure wake-up after timeout-suspend (not fixed but workarounded by exception catching)</li>
                <li>Time spent for using MS Fakes, wich were later substituted by Moq due to Fakes are not (at least easy) compatible with TeamCity</li>
            </ul>
        </li>
        <li>
            > Plans for the Next Week
            <ul>
                <li>Buy developer account on Amazon</li>
                <li>Start TDD with AMWS -- send feed via its API</li>
            </ul>
        </li>
    </ul>
</div>
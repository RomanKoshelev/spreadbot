@using System.Web.Mvc
@using System.Web.Mvc.Html
@using Spreadbot.Core.Channels.Ebay.Operations.Tasks
@using Spreadbot.Sdk.Common.Exceptions
@using Spreadbot.Sdk.Common.Operations.Tasks
@functions{

    private new static HtmlHelper< object > Html
    {
        get { return ( ( WebViewPage ) WebPageContext.Current.Page ).Html; }
    }

    private static string TaskClass( TaskStatus statusCode )
    {
        return string.Format( "sb-task sb-task-{0}", statusCode.ToString().ToLower() );
    }

}

@helper ShowTasks( IEnumerable< IAbstractTask > tasks )
{
    try {
        var enumerable = tasks.ToList();
        if( enumerable.Count() != 0 ) {
            <ul>
                @foreach( var task in enumerable ) {
                    <li>
                        @ShowTaskInfo( task )
                    </li>
                    @ShowTasks( task.AbstractSubTasks )
                }
            </ul>
        }
    }
    catch( Exception e ) {
        ExceptionUtility.LogException( e, @"Demoshop\Index.cshtml\ShowTasks" );
        <div class="sb-message-error">Exception was couhght [@e.GetType() : @e.Message]</div>
        <div class="sb-message-error">Please, press [F5] -- it is known bug about Azure waking-up</div>
    }
}

@helper ItemIdLink( IAbstractTask task )
{
    try {
        if( task is EbaySubmissionTask ) {
            @TryEbayItemIdLink( ( EbaySubmissionTask ) task )
        }
    }
    catch {
        <span></span>
    }
}

@helper TryEbayItemIdLink( EbaySubmissionTask task )
{
    var itemId = task.EbaySubmissionResponse.Result.MipItemId;
    <a href="http://www.ebay.com/itm/@itemId">@itemId</a>
}

@helper ShowTaskInfo( IAbstractTask task )
{
    <div class="@TaskClass( task.GetStatusCode() )">
        @task.GetBriefInfo() [@Html.ActionLink( "...", "Show", "Task", new { taskId = @task.Id }, new { } )]
        @ItemIdLink( task )
    </div>
}